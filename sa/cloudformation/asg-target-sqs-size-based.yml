AWSTemplateFormatVersion: 2010-09-09

# create asg + sqs-queue-size-based policy
# Go to sqs add a few messages (more than 2), wait for some time. ASG would add 2 more instances. If number stays for some time, asg would add last 4th instance. Then clear the queue, after some time, asg will down the instances to 1

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.100.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value:  !Sub ${AWS::StackName}-MyVpc
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    DependsOn: VPC
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-MyVpc-IGW
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.100.1.0/24
      AvailabilityZone: us-east-1a
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-MyVpc-PublicSubnet
  PublicRT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-MyVpc-Public-RT
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRT
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  PublicSubnetRTAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRT

  WebServerSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH/HTTP access from anywhere
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-MyVpc-WebServerSG
  LaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      LaunchConfigurationName: !Sub ${AWS::StackName}-LaunchConfig
      InstanceType: t2.micro
      ImageId: ami-09d95fab7fff3776c
      KeyName: mykey
      AssociatePublicIpAddress: true
      UserData:
        Fn::Base64:
          !Sub |
          #!/usr/bin/env bash
          sudo yum install httpd -y
          sudo service httpd start
          sudo echo "<h1>App #$(shuf -i 99-999 -n 1)</h1>" > /var/www/html/index.html
      SecurityGroups:
        - !GetAtt WebServerSG.GroupId
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: 8
  ASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Sub ${AWS::StackName}-MyVpc-ASG
      LaunchConfigurationName: !Ref LaunchConfig
      MinSize: 1
      MaxSize: 4
      HealthCheckGracePeriod: 10
      VPCZoneIdentifier:
        - !Ref PublicSubnet
  SqsSizeBasedScalingPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref ASG
      PolicyType: TargetTrackingScaling
      TargetTrackingConfiguration:
        CustomizedMetricSpecification:
          Dimensions:
            - Name: QueueName
              Value: !GetAtt SqsQueue.QueueName
          MetricName: ApproximateNumberOfMessagesVisible
          Namespace: AWS/SQS
          Statistic: Sum
        TargetValue: 2

  SqsQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${AWS::StackName}-SqsQueue